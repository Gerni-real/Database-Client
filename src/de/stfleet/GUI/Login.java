/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.stfleet.GUI;

import de.stfleet.core.Main;
import java.io.IOException;
import java.net.InetAddress;
import java.net.NetworkInterface;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author kevin
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LoginButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ConnectionLabel = new javax.swing.JLabel();
        UsernameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        PasswordTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImages(null);
        setMaximumSize(new java.awt.Dimension(400, 228));
        setResizable(false);

        LoginButton.setText("Login");
        LoginButton.setEnabled(false);
        LoginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                LoginButtonMouseReleased(evt);
            }
        });
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                none(evt);
            }
        });

        jLabel1.setText("Verbindungsstatus:");

        ConnectionLabel.setText("-");

        UsernameTextField.setToolTipText("");
        UsernameTextField.setEnabled(false);
        UsernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Username:");

        PasswordTextField.setToolTipText("");
        PasswordTextField.setEnabled(false);
        PasswordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Passwort:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(169, Short.MAX_VALUE)
                .addComponent(LoginButton)
                .addContainerGap(170, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConnectionLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(PasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LoginButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ConnectionLabel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void none(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_none
        // TODO add your handling code here:
    }//GEN-LAST:event_none

    private void UsernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameTextFieldActionPerformed

    private void PasswordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordTextFieldActionPerformed

    private void LoginButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMouseReleased
        if (!UsernameTextField.getText().equals("") & !PasswordTextField.getText().equals("")) {
            InetAddress ip;
            String MacAdress;
            String username = UsernameTextField.getText();
            String password = PasswordTextField.getText();
            try {
                ip = InetAddress.getLocalHost();
                NetworkInterface network = NetworkInterface.getByInetAddress(ip);
                byte[] mac = network.getHardwareAddress();
                StringBuilder sb = new StringBuilder();
                for (int i = 0; i < mac.length; i++) {
                    sb.append(String.format("%02X%s", mac[i], (i < mac.length - 1) ? "-" : ""));
                }
                MacAdress = sb.toString();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Fehler beim Auslesen der MAC-Adresse!");
                MacAdress = "ERROR";
            }
            try {
            Main.out.println("login;" + username + ";" + password + ";" + MacAdress);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Fehler beim senden der Daten!");
            }
            boolean run = true;
            boolean authenticated = false;
            while(run) {
                try {
                    switch (Main.in.readLine()) {
                        case "Authenticated":
                            JOptionPane.showMessageDialog(this, "Eingeloggt!");
                            run = false;
                            authenticated = true;
                            Main.username = username;
                            Main.password = password;
                            Main.MACAdress = MacAdress;
                            break;
                        case "UsernameNotExist":
                            JOptionPane.showMessageDialog(this, "Dieser Benutzername existiert nicht!");
                            run = false;
                            break;
                        case "WrongPassword":
                            JOptionPane.showMessageDialog(this, "Dieses Passwort stimmt nicht mit dem Benutzernamen 端berein!");
                            run = false;
                            break;
                        case "WrongMacAdress":
                            JOptionPane.showMessageDialog(this, "Die MAC-Adresse stimmt nicht mit dem ersten Login 端berein!");
                            run = false;
                            break;
                        default:
                            JOptionPane.showMessageDialog(this, "Keine verwertbaren Informationen vom Server erhalten!");
                            run = false;
                            break;
                    }
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, "Fehler beim empfangen der Daten!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Die Felder Username/Passwort m端ssen ausgef端llt werden!");
        }
    }//GEN-LAST:event_LoginButtonMouseReleased

    public void changeVariable(String var, String newValue) {
        if ("ConnectionLabel".equals(var)) {
            ConnectionLabel.setText(newValue);
        } else if ("LoginButton".equals(var)) {
            if ("true".equals(newValue)) {
                LoginButton.setEnabled(true);
            } else if ("false".equals(newValue)) {
                LoginButton.setEnabled(false);
            }
        } else if ("PasswordTextField".equals(var)) {
            if ("true".equals(newValue)) {
                PasswordTextField.setEnabled(true);
            } else if ("false".equals(newValue)) {
                PasswordTextField.setEnabled(false);
            }
        } else if ("UsernameTextField".equals(var)) {
            if ("true".equals(newValue)) {
                UsernameTextField.setEnabled(true);
            } else if ("false".equals(newValue)) {
                UsernameTextField.setEnabled(false);
            }
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ConnectionLabel;
    private javax.swing.JButton LoginButton;
    private javax.swing.JTextField PasswordTextField;
    private javax.swing.JTextField UsernameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables

}
